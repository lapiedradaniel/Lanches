// <auto-generated />
using System;
using LanchesMac.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanchesMac.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231212184130_iniciocomtabelas")]
    partial class iniciocomtabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LanchesMac.Models.CarrinhoCompraItem", b =>
                {
                    b.Property<int>("CarrinhoCompraItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarrinhoCompraItemId"));

                    b.Property<string>("CarrinhoCompraId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("LancheId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("CarrinhoCompraItemId");

                    b.HasIndex("LancheId");

                    b.ToTable("CarrinhoCompraItens");
                });

            modelBuilder.Entity("LanchesMac.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("CategoriaNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            CategoriaNome = "Lanche",
                            Descricao = "Melhores Lanches"
                        },
                        new
                        {
                            CategoriaId = 2,
                            CategoriaNome = "Pizza",
                            Descricao = "Melhores Pizza"
                        });
                });

            modelBuilder.Entity("LanchesMac.Models.Lanche", b =>
                {
                    b.Property<int>("LancheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LancheId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("DescricaoCurta")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescricaoDetalhada")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EmEstoque")
                        .HasColumnType("bit");

                    b.Property<string>("ImagemThumbnailUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsLanchePreferido")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("LancheId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Lanches");

                    b.HasData(
                        new
                        {
                            LancheId = 1,
                            CategoriaId = 1,
                            DescricaoCurta = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            DescricaoDetalhada = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            IsLanchePreferido = true,
                            Nome = "Hamburger",
                            Preco = 15.00m
                        },
                        new
                        {
                            LancheId = 2,
                            CategoriaId = 1,
                            DescricaoCurta = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            DescricaoDetalhada = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            IsLanchePreferido = true,
                            Nome = "Hamburger",
                            Preco = 10.00m
                        },
                        new
                        {
                            LancheId = 3,
                            CategoriaId = 1,
                            DescricaoCurta = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            DescricaoDetalhada = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            IsLanchePreferido = true,
                            Nome = "Hamburger",
                            Preco = 30.00m
                        },
                        new
                        {
                            LancheId = 4,
                            CategoriaId = 1,
                            DescricaoCurta = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            DescricaoDetalhada = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            IsLanchePreferido = true,
                            Nome = "Hamburger",
                            Preco = 25.00m
                        },
                        new
                        {
                            LancheId = 5,
                            CategoriaId = 1,
                            DescricaoCurta = "Um hamburguer (100% carne bovina), queijo, tomate, alface americana, cebola e maionese Tasty",
                            DescricaoDetalhada = "Um hamburguer (100% carne bovina), queijo, tomate, alface americana, cebola e maionese Tasty",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_81921_3.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_81921_3.png",
                            IsLanchePreferido = true,
                            Nome = "Big Tasty",
                            Preco = 19.00m
                        },
                        new
                        {
                            LancheId = 6,
                            CategoriaId = 1,
                            DescricaoCurta = "Dois hambúrgueres (100% carne bovina), mostarda, ketchup, cebola, queijo cheddar e pão com gergelim",
                            DescricaoDetalhada = "Dois hambúrgueres (100% carne bovina), mostarda, ketchup, cebola, queijo cheddar e pão com gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_92371_3.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_92371_3.png",
                            IsLanchePreferido = true,
                            Nome = "Duplo Quarterão",
                            Preco = 24.00m
                        },
                        new
                        {
                            LancheId = 7,
                            CategoriaId = 1,
                            DescricaoCurta = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            DescricaoDetalhada = "Um Hamburguer (100% carne bovina), cebola, picles, ketchup, mostarda e pão sem gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/17%20DLV.png",
                            IsLanchePreferido = true,
                            Nome = "X-burger",
                            Preco = 12.00m
                        },
                        new
                        {
                            LancheId = 8,
                            CategoriaId = 1,
                            DescricaoCurta = "Rango empanado, maionese, alface americana e pão com gergelim",
                            DescricaoDetalhada = "Rango empanado, maionese, alface americana e pão com gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_62_3.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_62_3.png",
                            IsLanchePreferido = true,
                            Nome = "McChicken",
                            Preco = 20.00m
                        },
                        new
                        {
                            LancheId = 9,
                            CategoriaId = 1,
                            DescricaoCurta = "Frango empanado, maionese, bacon, alface americana e pão com gergelim",
                            DescricaoDetalhada = "Frango empanado, maionese, bacon, alface americana e pão com gergelim",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/67477%20DLV.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/67477%20DLV.png",
                            IsLanchePreferido = true,
                            Nome = "McChicken Bacon",
                            Preco = 23.00m
                        },
                        new
                        {
                            LancheId = 10,
                            CategoriaId = 1,
                            DescricaoCurta = "Um hamburguer (100% carne bovina), queijo, tomate, alface americana, cebola e maionese Tasty",
                            DescricaoDetalhada = "Um hamburguer (100% carne bovina), queijo, tomate, alface americana, cebola e maionese Tasty",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_81921_3.png",
                            ImagemUrl = "https://cache-mcd-ecommerce.appmcdonalds.com/images/BR/DLV_81921_3.png",
                            IsLanchePreferido = true,
                            Nome = "Big Tasty",
                            Preco = 19.00m
                        },
                        new
                        {
                            LancheId = 11,
                            CategoriaId = 2,
                            DescricaoCurta = "Uma pizza simples, mas que conquistou uma legião de fãs em todo o mundo. Ela está presente em mais de 30% dos pedidos. Leva calabresa e cebola",
                            DescricaoDetalhada = "Uma pizza simples, mas que conquistou uma legião de fãs em todo o mundo. Ela está presente em mais de 30% dos pedidos. Leva calabresa e cebola",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Calabresa",
                            Preco = 21.00m
                        },
                        new
                        {
                            LancheId = 12,
                            CategoriaId = 2,
                            DescricaoCurta = "Ovos, cebola, azeitona, ervilha, queijo e presunto dão sabor à segunda pizza mais queridinha dos brasileiros",
                            DescricaoDetalhada = "Ovos, cebola, azeitona, ervilha, queijo e presunto dão sabor à segunda pizza mais queridinha dos brasileiros",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Portuguesa",
                            Preco = 38.00m
                        },
                        new
                        {
                            LancheId = 13,
                            CategoriaId = 2,
                            DescricaoCurta = "Sabor ícone da Itália que leva apenas molho, muçarela, tomate e manjericão. É uma ótima opção para quem não come carne",
                            DescricaoDetalhada = "Sabor ícone da Itália que leva apenas molho, muçarela, tomate e manjericão. É uma ótima opção para quem não come carne",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Marguerita",
                            Preco = 36.00m
                        },
                        new
                        {
                            LancheId = 14,
                            CategoriaId = 2,
                            DescricaoCurta = "A mistura de proteína e cremosidade que deu muito certo. Essa pizza recebe frango com catupiry por cima",
                            DescricaoDetalhada = "A mistura de proteína e cremosidade que deu muito certo. Essa pizza recebe frango com catupiry por cima",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Frango com catupiry",
                            Preco = 27.00m
                        },
                        new
                        {
                            LancheId = 15,
                            CategoriaId = 2,
                            DescricaoCurta = "Simples e perfeita como deve ser. A número 1 entre os paulistanos é tradicional na chamada pizza meio a meio",
                            DescricaoDetalhada = "Simples e perfeita como deve ser. A número 1 entre os paulistanos é tradicional na chamada pizza meio a meio",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Muçarela",
                            Preco = 22.00m
                        },
                        new
                        {
                            LancheId = 16,
                            CategoriaId = 2,
                            DescricaoCurta = "Um sabor genuinamente italiano que não pode faltar na sua pizzaria ou no seu pedido. Leva muçarela, azeite, molho de tomate e manjericão",
                            DescricaoDetalhada = "Um sabor genuinamente italiano que não pode faltar na sua pizzaria ou no seu pedido. Leva muçarela, azeite, molho de tomate e manjericão",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Napolitana",
                            Preco = 42.00m
                        },
                        new
                        {
                            LancheId = 17,
                            CategoriaId = 2,
                            DescricaoCurta = "Essa é para quem é um verdadeiro amante de queijos, pois tem quatro tipos: gorgonzola, provolone, muçarela e parmesão",
                            DescricaoDetalhada = "Essa é para quem é um verdadeiro amante de queijos, pois tem quatro tipos: gorgonzola, provolone, muçarela e parmesão",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Quatro queijos",
                            Preco = 39.00m
                        },
                        new
                        {
                            LancheId = 18,
                            CategoriaId = 2,
                            DescricaoCurta = "Este não é um lombo qualquer, é um do tipo canadense! Sua mistura de ingredientes contém: lombinho, cebola, bacon e champignon",
                            DescricaoDetalhada = "Este não é um lombo qualquer, é um do tipo canadense! Sua mistura de ingredientes contém: lombinho, cebola, bacon e champignon",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            ImagemUrl = "https://img.freepik.com/fotos-gratis/feche-a-pizza-italiana-sobre-o-queijo-cole-o-foco-seletivo-generativo-ai_1258-153063.jpg",
                            IsLanchePreferido = true,
                            Nome = "Lombo canadense",
                            Preco = 35.00m
                        },
                        new
                        {
                            LancheId = 19,
                            CategoriaId = 2,
                            DescricaoCurta = "O clássico doce brasileiro que cai bem de qualquer jeito e a qualquer hora está entre as pizzas doces mais vendidas",
                            DescricaoDetalhada = "O clássico doce brasileiro que cai bem de qualquer jeito e a qualquer hora está entre as pizzas doces mais vendidas",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSISZsaE3p0qS8tfYxybb0uOcxmJumFFgJV9Q&usqp=CAU",
                            ImagemUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSISZsaE3p0qS8tfYxybb0uOcxmJumFFgJV9Q&usqp=CAU",
                            IsLanchePreferido = true,
                            Nome = "Brigadeiro",
                            Preco = 29.00m
                        },
                        new
                        {
                            LancheId = 20,
                            CategoriaId = 2,
                            DescricaoCurta = "A pizza de nutella é semelhante à anterior, a diferença é que ela pode ser servida sem as frutas, somente com o creme de avelã",
                            DescricaoDetalhada = "A pizza de nutella é semelhante à anterior, a diferença é que ela pode ser servida sem as frutas, somente com o creme de avelã",
                            EmEstoque = true,
                            ImagemThumbnailUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSISZsaE3p0qS8tfYxybb0uOcxmJumFFgJV9Q&usqp=CAU",
                            ImagemUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSISZsaE3p0qS8tfYxybb0uOcxmJumFFgJV9Q&usqp=CAU",
                            IsLanchePreferido = true,
                            Nome = "Nutella",
                            Preco = 39.00m
                        });
                });

            modelBuilder.Entity("LanchesMac.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoId"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Endereco1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco2")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("PedidoEntregueEm")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PedidoEnviado")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PedidoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("TotalItensPedido")
                        .HasColumnType("int");

                    b.HasKey("PedidoId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("LanchesMac.Models.PedidoDetalhe", b =>
                {
                    b.Property<int>("PedidoDetalheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoDetalheId"));

                    b.Property<int>("LancheId")
                        .HasColumnType("int");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("PedidoDetalheId");

                    b.HasIndex("LancheId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidosDetalhes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LanchesMac.Models.CarrinhoCompraItem", b =>
                {
                    b.HasOne("LanchesMac.Models.Lanche", "Lanche")
                        .WithMany()
                        .HasForeignKey("LancheId");

                    b.Navigation("Lanche");
                });

            modelBuilder.Entity("LanchesMac.Models.Lanche", b =>
                {
                    b.HasOne("LanchesMac.Models.Categoria", "Categoria")
                        .WithMany("Lanches")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LanchesMac.Models.PedidoDetalhe", b =>
                {
                    b.HasOne("LanchesMac.Models.Lanche", "Lanche")
                        .WithMany()
                        .HasForeignKey("LancheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LanchesMac.Models.Pedido", "Pedido")
                        .WithMany("PedidoItens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lanche");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LanchesMac.Models.Categoria", b =>
                {
                    b.Navigation("Lanches");
                });

            modelBuilder.Entity("LanchesMac.Models.Pedido", b =>
                {
                    b.Navigation("PedidoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
